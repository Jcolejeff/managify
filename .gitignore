# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.
dist/
prod-build/
# dependencies
/node_modules
/.pnp
.pnp.js
yarn.lock
.env
# package-lock.json

# testing
/coverage

# production
/build

# misc
.DS_Store
.vscode
.idea
.env.local
.env.development.local
.env.test.local
.env.production.local
.env.production

npm-debug.log*
yarn-debug.log*
yarn-error.log*


src/partials/Layout/Layout-local.jsx
src/partials/Layout/Layout-staging.jsx
src/lib/API-local.js
src/lib/API-staging.js


# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
# Local Netlify folder
.netlify
